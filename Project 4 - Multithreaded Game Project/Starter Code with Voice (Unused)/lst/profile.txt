; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\profile.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\profile.d --cpu=Cortex-M0+ --fpmode=fast --apcs=interwork -O3 -Otime -I.\inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Freescale\Kinetis -D__RTX -D__MICROLIB -DMKL25Z128xxx4 --omf_browse=.\obj\profile.crf src\profile.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  Init_Profiling PROC
;;;15     
;;;16     void Init_Profiling(void) {
000000  b510              PUSH     {r4,lr}
;;;17     	unsigned i;
;;;18     	
;;;19     	// Clear region counts
;;;20       for (i=0; i<NumProfileRegions; i++) {
000002  4c6e              LDR      r4,|L1.444|
000004  6820              LDR      r0,[r4,#0]  ; NumProfileRegions
000006  2800              CMP      r0,#0
000008  d012              BEQ      |L1.48|
;;;21     	  RegionCount[i]=0;
;;;22       }
00000a  7820              LDRB     r0,[r4,#0]  ; NumProfileRegions
00000c  2100              MOVS     r1,#0
00000e  07c0              LSLS     r0,r0,#31
000010  0fc0              LSRS     r0,r0,#31
000012  4a6b              LDR      r2,|L1.448|
000014  2800              CMP      r0,#0                 ;20
000016  d000              BEQ      |L1.26|
000018  6011              STR      r1,[r2,#0]            ;21  ; RegionCount
                  |L1.26|
00001a  6823              LDR      r3,[r4,#0]            ;20  ; NumProfileRegions
00001c  4298              CMP      r0,r3                 ;20
00001e  d207              BCS      |L1.48|
                  |L1.32|
000020  0083              LSLS     r3,r0,#2              ;20
000022  50d1              STR      r1,[r2,r3]            ;21
000024  189b              ADDS     r3,r3,r2              ;21
000026  6059              STR      r1,[r3,#4]            ;21
000028  6823              LDR      r3,[r4,#0]            ;21  ; NumProfileRegions
00002a  1c80              ADDS     r0,r0,#2              ;21
00002c  4298              CMP      r0,r3                 ;21
00002e  d3f7              BCC      |L1.32|
                  |L1.48|
;;;23     	
;;;24     	// Initialize and start timer
;;;25     	PIT_Init(2399); // 24 MHz/(23999+1) = 1000 samples per second
000030  4864              LDR      r0,|L1.452|
000032  f7fffffe          BL       PIT_Init
;;;26     	PIT_Start();
000036  f7fffffe          BL       PIT_Start
;;;27     }
00003a  bd10              POP      {r4,pc}
;;;28     
                          ENDP

                  Disable_Profiling PROC
;;;29     void Disable_Profiling(void) {
00003c  4862              LDR      r0,|L1.456|
;;;30       profiling_enabled--;
00003e  7801              LDRB     r1,[r0,#0]  ; profiling_enabled
000040  1e49              SUBS     r1,r1,#1
000042  7001              STRB     r1,[r0,#0]
;;;31     }
000044  4770              BX       lr
;;;32     
                          ENDP

                  Enable_Profiling PROC
;;;33     void Enable_Profiling(void) {
000046  4860              LDR      r0,|L1.456|
;;;34       profiling_enabled++;
000048  7801              LDRB     r1,[r0,#0]  ; profiling_enabled
00004a  1c49              ADDS     r1,r1,#1
00004c  7001              STRB     r1,[r0,#0]
;;;35     }
00004e  4770              BX       lr
;;;36     
                          ENDP

                  Sort_Profile_Regions PROC
;;;37     void Sort_Profile_Regions(void){
000050  b5f0              PUSH     {r4-r7,lr}
;;;38     	unsigned i, j, t, iMax;
;;;39     	
;;;40     	// Initialize indices
;;;41       for (i=0; i<NumProfileRegions; i++) {
000052  4c5a              LDR      r4,|L1.444|
000054  4d5d              LDR      r5,|L1.460|
000056  6820              LDR      r0,[r4,#0]  ; NumProfileRegions
000058  b082              SUB      sp,sp,#8              ;37
00005a  2800              CMP      r0,#0
00005c  d015              BEQ      |L1.138|
;;;42     	  SortedRegions[i]=i;
;;;43       }
;;;44     	
;;;45     	// Sort indices with selection sort from Wikipedia
;;;46      
;;;47     	/* advance the position through the entire array */
;;;48     	/*   (could do j < n-1 because single element is also max element) */
;;;49     	for (j = 0; j < NumProfileRegions-1; j++) {
;;;50         /* find the min element in the unsorted a[j .. n-1] */
;;;51      
;;;52         /* assume the max is the first element */
;;;53         iMax = SortedRegions[j];
;;;54         /* test against elements after j to find the smallest */
;;;55         for ( i = j+1; i < NumProfileRegions; i++) {
;;;56             /* if this element is more, then it is the new maximum */  
;;;57             if (RegionCount[SortedRegions[i]] > RegionCount[SortedRegions[iMax]]) {
;;;58                 /* found new max; remember its index */
;;;59                 iMax = i;
;;;60             }
;;;61         }
;;;62      
;;;63         /* iMax is the index of the maximum element. Swap it with the current position */
;;;64         if ( iMax != j ) {
;;;65     				t = SortedRegions[j];
;;;66     				SortedRegions[j] = SortedRegions[iMax]; 
;;;67     				SortedRegions[iMax] = t;
;;;68         }
;;;69     	}
;;;70     }
00005e  7821              LDRB     r1,[r4,#0]  ; NumProfileRegions
000060  1f2a              SUBS     r2,r5,#4              ;41
000062  2000              MOVS     r0,#0
000064  07c9              LSLS     r1,r1,#31
000066  d002              BEQ      |L1.110|
000068  6050              STR      r0,[r2,#4]
00006a  2001              MOVS     r0,#1
00006c  1d12              ADDS     r2,r2,#4
                  |L1.110|
00006e  6821              LDR      r1,[r4,#0]            ;41  ; NumProfileRegions
000070  0849              LSRS     r1,r1,#1              ;41
000072  d007              BEQ      |L1.132|
                  |L1.116|
000074  1c43              ADDS     r3,r0,#1              ;42
000076  6093              STR      r3,[r2,#8]            ;42
000078  6050              STR      r0,[r2,#4]            ;42
00007a  1c80              ADDS     r0,r0,#2              ;42
00007c  1e49              SUBS     r1,r1,#1              ;42
00007e  3208              ADDS     r2,r2,#8              ;42
000080  2900              CMP      r1,#0
000082  d1f7              BNE      |L1.116|
                  |L1.132|
000084  6820              LDR      r0,[r4,#0]            ;49  ; NumProfileRegions
000086  2801              CMP      r0,#1                 ;49
000088  d05a              BEQ      |L1.320|
                  |L1.138|
00008a  2700              MOVS     r7,#0                 ;49
00008c  2801              CMP      r0,#1                 ;49
00008e  d057              BEQ      |L1.320|
000090  484a              LDR      r0,|L1.444|
000092  494b              LDR      r1,|L1.448|
000094  6800              LDR      r0,[r0,#0]            ;41
000096  1e40              SUBS     r0,r0,#1              ;41
000098  9001              STR      r0,[sp,#4]            ;49
                  |L1.154|
00009a  00ba              LSLS     r2,r7,#2              ;49
00009c  484b              LDR      r0,|L1.460|
00009e  4696              MOV      lr,r2                 ;53
0000a0  5880              LDR      r0,[r0,r2]            ;53
0000a2  4a46              LDR      r2,|L1.444|
0000a4  1c7c              ADDS     r4,r7,#1              ;55
0000a6  6813              LDR      r3,[r2,#0]            ;55  ; NumProfileRegions
0000a8  4684              MOV      r12,r0                ;53
0000aa  42a3              CMP      r3,r4                 ;55
0000ac  d93b              BLS      |L1.294|
0000ae  6812              LDR      r2,[r2,#0]            ;55  ; NumProfileRegions
0000b0  2301              MOVS     r3,#1                 ;55
0000b2  1bd2              SUBS     r2,r2,r7              ;55
0000b4  1e92              SUBS     r2,r2,#2              ;55
0000b6  4393              BICS     r3,r3,r2              ;55
0000b8  19db              ADDS     r3,r3,r7              ;55
0000ba  9300              STR      r3,[sp,#0]            ;55
0000bc  1c7a              ADDS     r2,r7,#1              ;55
0000be  1c5b              ADDS     r3,r3,#1              ;55
0000c0  4293              CMP      r3,r2                 ;55
0000c2  d90e              BLS      |L1.226|
                  |L1.196|
0000c4  4c41              LDR      r4,|L1.460|
0000c6  0095              LSLS     r5,r2,#2              ;55
0000c8  5965              LDR      r5,[r4,r5]            ;57
0000ca  00ad              LSLS     r5,r5,#2              ;57
0000cc  594d              LDR      r5,[r1,r5]            ;57
0000ce  0086              LSLS     r6,r0,#2              ;57
0000d0  59a4              LDR      r4,[r4,r6]            ;57
0000d2  00a4              LSLS     r4,r4,#2              ;57
0000d4  590c              LDR      r4,[r1,r4]            ;57
0000d6  42a5              CMP      r5,r4                 ;57
0000d8  d900              BLS      |L1.220|
0000da  4610              MOV      r0,r2                 ;59
                  |L1.220|
0000dc  1c52              ADDS     r2,r2,#1              ;59
0000de  4293              CMP      r3,r2                 ;59
0000e0  d8f0              BHI      |L1.196|
                  |L1.226|
0000e2  4c36              LDR      r4,|L1.444|
0000e4  9a00              LDR      r2,[sp,#0]            ;55
0000e6  6823              LDR      r3,[r4,#0]            ;55  ; NumProfileRegions
0000e8  1c52              ADDS     r2,r2,#1              ;55
0000ea  429a              CMP      r2,r3                 ;55
0000ec  d21b              BCS      |L1.294|
0000ee  4b37              LDR      r3,|L1.460|
                  |L1.240|
0000f0  0094              LSLS     r4,r2,#2              ;41
0000f2  591d              LDR      r5,[r3,r4]            ;57
0000f4  00ad              LSLS     r5,r5,#2              ;57
0000f6  594d              LDR      r5,[r1,r5]            ;57
0000f8  0086              LSLS     r6,r0,#2              ;57
0000fa  599e              LDR      r6,[r3,r6]            ;57
0000fc  00b6              LSLS     r6,r6,#2              ;57
0000fe  598e              LDR      r6,[r1,r6]            ;57
000100  42b5              CMP      r5,r6                 ;57
000102  d900              BLS      |L1.262|
000104  4610              MOV      r0,r2                 ;59
                  |L1.262|
000106  18e4              ADDS     r4,r4,r3              ;57
000108  6864              LDR      r4,[r4,#4]            ;57
00010a  00a4              LSLS     r4,r4,#2              ;57
00010c  590c              LDR      r4,[r1,r4]            ;57
00010e  0085              LSLS     r5,r0,#2              ;57
000110  595d              LDR      r5,[r3,r5]            ;57
000112  00ad              LSLS     r5,r5,#2              ;57
000114  594d              LDR      r5,[r1,r5]            ;57
000116  42ac              CMP      r4,r5                 ;57
000118  d900              BLS      |L1.284|
00011a  1c50              ADDS     r0,r2,#1              ;59
                  |L1.284|
00011c  4c27              LDR      r4,|L1.444|
00011e  1c92              ADDS     r2,r2,#2              ;59
000120  6824              LDR      r4,[r4,#0]            ;59  ; NumProfileRegions
000122  42a2              CMP      r2,r4                 ;59
000124  d3e4              BCC      |L1.240|
                  |L1.294|
000126  42b8              CMP      r0,r7                 ;64
000128  d006              BEQ      |L1.312|
00012a  4a28              LDR      r2,|L1.460|
00012c  0080              LSLS     r0,r0,#2              ;66
00012e  5815              LDR      r5,[r2,r0]            ;66
000130  4674              MOV      r4,lr                 ;66
000132  4663              MOV      r3,r12                ;65
000134  5115              STR      r5,[r2,r4]            ;66
000136  5013              STR      r3,[r2,r0]            ;67
                  |L1.312|
000138  9801              LDR      r0,[sp,#4]            ;67
00013a  1c7f              ADDS     r7,r7,#1              ;67
00013c  4287              CMP      r7,r0                 ;67
00013e  d3ac              BCC      |L1.154|
                  |L1.320|
000140  b002              ADD      sp,sp,#8
000142  bdf0              POP      {r4-r7,pc}
;;;71     
                          ENDP

                  Display_Profile PROC
;;;72     void Display_Profile(void) {
000144  b5f0              PUSH     {r4-r7,lr}
000146  b08f              SUB      sp,sp,#0x3c
;;;73     	PT_T p;
;;;74     	unsigned i, row;
;;;75     	char buffer[32];
;;;76     	
;;;77     	row = 0;
000148  2400              MOVS     r4,#0
;;;78     	p.Y = ROW_TO_Y(row);
;;;79     	for (i=0; i<NumProfileRegions; i++) {
00014a  481c              LDR      r0,|L1.444|
00014c  9405              STR      r4,[sp,#0x14]
00014e  6803              LDR      r3,[r0,#0]  ; NumProfileRegions
000150  4625              MOV      r5,r4
000152  2b00              CMP      r3,#0
000154  d92f              BLS      |L1.438|
;;;80     		if (RegionCount[i] > 0) {
000156  4e1a              LDR      r6,|L1.448|
                  |L1.344|
000158  00af              LSLS     r7,r5,#2
00015a  59f0              LDR      r0,[r6,r7]
00015c  2800              CMP      r0,#0
00015e  d025              BEQ      |L1.428|
;;;81     			p.X = COL_TO_X(0);
000160  2000              MOVS     r0,#0
;;;82     			p.Y = ROW_TO_Y(row);
000162  9004              STR      r0,[sp,#0x10]
000164  481a              LDR      r0,|L1.464|
000166  7800              LDRB     r0,[r0,#0]  ; G_TFT_char_height
000168  4360              MULS     r0,r4,r0
;;;83     			snprintf(buffer, TFT_MAX_COLS, "%4d %s", RegionCount[i], RegionTable[i].Name);
00016a  9005              STR      r0,[sp,#0x14]
00016c  4819              LDR      r0,|L1.468|
00016e  7801              LDRB     r1,[r0,#0]  ; G_TFT_char_width
000170  20f0              MOVS     r0,#0xf0
000172  f7fffffe          BL       __aeabi_uidivmod
000176  4918              LDR      r1,|L1.472|
000178  016a              LSLS     r2,r5,#5
00017a  1851              ADDS     r1,r2,r1
00017c  3108              ADDS     r1,r1,#8
00017e  9100              STR      r1,[sp,#0]
000180  59f3              LDR      r3,[r6,r7]
000182  4601              MOV      r1,r0
000184  a215              ADR      r2,|L1.476|
000186  a806              ADD      r0,sp,#0x18
000188  f7fffffe          BL       __2snprintf
;;;84     			TFT_Text_PrintStr(&p, buffer);
00018c  a906              ADD      r1,sp,#0x18
00018e  a804              ADD      r0,sp,#0x10
000190  f7fffffe          BL       TFT_Text_PrintStr
;;;85     			row++;
;;;86     			if (row >= TFT_MAX_ROWS) {
000194  480e              LDR      r0,|L1.464|
000196  1c64              ADDS     r4,r4,#1
000198  7801              LDRB     r1,[r0,#0]  ; G_TFT_char_height
00019a  20ff              MOVS     r0,#0xff
00019c  3041              ADDS     r0,r0,#0x41
00019e  f7fffffe          BL       __aeabi_uidivmod
0001a2  42a0              CMP      r0,r4
0001a4  d802              BHI      |L1.428|
;;;87     				row = 0;
0001a6  2400              MOVS     r4,#0
;;;88     				TFT_Erase();
0001a8  f7fffffe          BL       TFT_Erase
                  |L1.428|
0001ac  4803              LDR      r0,|L1.444|
0001ae  1c6d              ADDS     r5,r5,#1              ;79
0001b0  6800              LDR      r0,[r0,#0]            ;79  ; NumProfileRegions
0001b2  4285              CMP      r5,r0                 ;79
0001b4  d3d0              BCC      |L1.344|
                  |L1.438|
;;;89     			}
;;;90     		}
;;;91     	}
;;;92     }
0001b6  b00f              ADD      sp,sp,#0x3c
0001b8  bdf0              POP      {r4-r7,pc}
;;;93     
                          ENDP

0001ba  0000              DCW      0x0000
                  |L1.444|
                          DCD      NumProfileRegions
                  |L1.448|
                          DCD      RegionCount
                  |L1.452|
                          DCD      0x0000095f
                  |L1.456|
                          DCD      ||area_number.7||
                  |L1.460|
                          DCD      SortedRegions
                  |L1.464|
                          DCD      G_TFT_char_height
                  |L1.468|
                          DCD      G_TFT_char_width
                  |L1.472|
                          DCD      RegionTable
                  |L1.476|
0001dc  25346420          DCB      "%4d %s",0
0001e0  257300  
0001e3  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  adx_lost
                          DCD      0x00000000

                          AREA ||area_number.5||, DATA, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.data||
                  num_lost
                          DCD      0x00000000

                          AREA ||area_number.6||, DATA, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.data||
                  profile_ticks
                          DCD      0x00000000

                          AREA ||area_number.7||, DATA, ALIGN=0

                          EXPORTAS ||area_number.7||, ||.data||
                  profiling_enabled
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "src\\profile.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_profile_c_adx_lost____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_profile_c_adx_lost____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_profile_c_adx_lost____REVSH|
#line 144
|__asm___9_profile_c_adx_lost____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
